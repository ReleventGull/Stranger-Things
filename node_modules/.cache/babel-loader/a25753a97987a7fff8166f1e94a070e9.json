{"ast":null,"code":"const BASEURL = \"https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT\";\nexport const FetchPost = async () => {\n  try {\n    const response = await fetch(`${BASEURL}/posts`);\n    const {\n      data\n    } = await response.json();\n    return data.posts;\n  } catch (error) {\n    console.error(error);\n  }\n};\n_c = FetchPost;\nexport const isUserLoggedIn = async () => {\n  return true;\n};\nexport const checkUsers = async (username, password) => {\n  await fetch('https://strangers-things.herokuapp.com/api/COHORT-NAME/users/login', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: {\n        username: 'superman27',\n        password: 'krypt0n0rbust'\n      }\n    })\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n  }).catch(console.error);\n};\nvar _c;\n$RefreshReg$(_c, \"FetchPost\");","map":{"version":3,"names":["BASEURL","FetchPost","response","fetch","data","json","posts","error","console","isUserLoggedIn","checkUsers","username","password","method","headers","body","JSON","stringify","user","then","result","log","catch"],"sources":["/home/jaron/ClassProject/Stranger-Things/src/api/Api.js"],"sourcesContent":["\n\nconst BASEURL = \"https://strangers-things.herokuapp.com/api/2207-FTB-ET-WEB-PT\"\nexport const FetchPost = async () => {\n    \n    try {\n        const response = await fetch(`${BASEURL}/posts`)\n        const {data} = await response.json()\n        return data.posts\n\n    }catch(error) {\n        console.error(error)\n    }\n\n\n}\n\n\n\nexport const isUserLoggedIn = async () => {\n    return true ;\n };\n\n\n\nexport const  checkUsers = async (username, password) => {\n\n    await fetch('https://strangers-things.herokuapp.com/api/COHORT-NAME/users/login', {\n  method: \"POST\",\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    user: {\n      username: 'superman27',\n      password: 'krypt0n0rbust'\n    }\n  })\n}).then(response => response.json())\n  .then(result => {\n    console.log(result);\n  })\n  .catch(console.error);\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"AAEA,MAAMA,OAAO,GAAG,+DAA+D;AAC/E,OAAO,MAAMC,SAAS,GAAG,YAAY;EAEjC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEH,OAAQ,QAAO,CAAC;IAChD,MAAM;MAACI;IAAI,CAAC,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACpC,OAAOD,IAAI,CAACE,KAAK;EAErB,CAAC,QAAMC,KAAK,EAAE;IACVC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;EACxB;AAGJ,CAAC;AAAA,KAZYN,SAAS;AAgBtB,OAAO,MAAMQ,cAAc,GAAG,YAAY;EACtC,OAAO,IAAI;AACd,CAAC;AAIF,OAAO,MAAOC,UAAU,GAAG,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAErD,MAAMT,KAAK,CAAC,oEAAoE,EAAE;IACpFU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,IAAI,EAAE;QACJP,QAAQ,EAAE,YAAY;QACtBC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC,CAAC,CAACO,IAAI,CAACjB,QAAQ,IAAIA,QAAQ,CAACG,IAAI,EAAE,CAAC,CACjCc,IAAI,CAACC,MAAM,IAAI;IACdZ,OAAO,CAACa,GAAG,CAACD,MAAM,CAAC;EACrB,CAAC,CAAC,CACDE,KAAK,CAACd,OAAO,CAACD,KAAK,CAAC;AAGvB,CAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}