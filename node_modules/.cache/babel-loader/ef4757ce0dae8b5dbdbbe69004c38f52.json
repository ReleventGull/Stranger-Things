{"ast":null,"code":"var _jsxFileName = \"/home/jaron/ClassProject/Stranger-Things/src/components/PreviewPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { default as Postitem } from \"./Postsitem\";\nimport { useParams } from \"react-router-dom\";\nimport { createMessage } from \"../api/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreviewPost = _ref => {\n  _s();\n  let {\n    posts,\n    token\n  } = _ref;\n  const [message, setMessage] = useState('');\n  const {\n    postID\n  } = useParams();\n  const sendMessage = async (event, postID, token) => {\n    event.preventDefault();\n    setMessage('');\n    const response = await createMessage(message, token, postID);\n    console.log(response);\n  };\n  const singlePost = posts.find(post => post._id == postID);\n  return singlePost ? /*#__PURE__*/_jsxDEV(Postitem, {\n    post: singlePost,\n    children: singlePost.isAuthor ? null : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => sendMessage(event, singlePost._id, token),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"message\",\n        value: message,\n        onChange: event => setMessage(event.target.value),\n        placeholder: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"message-send\",\n        type: \"submit\",\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)\n  }, singlePost._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(PreviewPost, \"sDMjSeoClPYbqBy8RtXfTNQ+bNQ=\", false, function () {\n  return [useParams];\n});\n_c = PreviewPost;\nexport default PreviewPost;\nvar _c;\n$RefreshReg$(_c, \"PreviewPost\");","map":{"version":3,"names":["React","useState","default","Postitem","useParams","createMessage","PreviewPost","posts","token","message","setMessage","postID","sendMessage","event","preventDefault","response","console","log","singlePost","find","post","_id","isAuthor","target","value"],"sources":["/home/jaron/ClassProject/Stranger-Things/src/components/PreviewPost.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport {default as Postitem} from \"./Postsitem\"\nimport { useParams } from \"react-router-dom\";\nimport {createMessage} from \"../api/Api\"\n\nconst PreviewPost = ({posts, token}) => {\n    const [message, setMessage] = useState('')\n    const  {postID} = useParams()\n   \n   \n    \n    \n    const sendMessage = async(event, postID, token) => {\n        event.preventDefault()\n        setMessage('')\n        const response = await createMessage(message, token, postID)\n        console.log(response)\n    }\n   \n   \nconst singlePost = posts.find(post => post._id == postID )\n  \nreturn (\n\n        singlePost ? \n        <Postitem key={singlePost._id} post={singlePost} >\n        {singlePost.isAuthor ? null : \n        <form onSubmit={(event) => sendMessage(event, singlePost._id, token)}>\n        <input  className=\"message\"value={message} onChange={(event) => setMessage(event.target.value)} placeholder=\"Send Message\"></input>\n        <button className=\"message-send\" type=\"submit\">Send Message</button>\n\n\n        </form>}\n        </Postitem> :\n        <div>Loading</div>\n\n        \n\n    \n    \n    \n    \n)\n\n}\n\n\n\n\nexport default  PreviewPost \n\n\n\n "],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,OAAO,IAAIC,QAAQ,QAAO,aAAa;AAC/C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAAQC,aAAa,QAAO,YAAY;AAAA;AAExC,MAAMC,WAAW,GAAG,QAAoB;EAAA;EAAA,IAAnB;IAACC,KAAK;IAAEC;EAAK,CAAC;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAO;IAACU;EAAM,CAAC,GAAGP,SAAS,EAAE;EAK7B,MAAMQ,WAAW,GAAG,OAAMC,KAAK,EAAEF,MAAM,EAAEH,KAAK,KAAK;IAC/CK,KAAK,CAACC,cAAc,EAAE;IACtBJ,UAAU,CAAC,EAAE,CAAC;IACd,MAAMK,QAAQ,GAAG,MAAMV,aAAa,CAACI,OAAO,EAAED,KAAK,EAAEG,MAAM,CAAC;IAC5DK,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACzB,CAAC;EAGL,MAAMG,UAAU,GAAGX,KAAK,CAACY,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,IAAIV,MAAM,CAAE;EAE1D,OAEQO,UAAU,gBACV,QAAC,QAAQ;IAAsB,IAAI,EAAEA,UAAW;IAAA,UAC/CA,UAAU,CAACI,QAAQ,GAAG,IAAI,gBAC3B;MAAM,QAAQ,EAAGT,KAAK,IAAKD,WAAW,CAACC,KAAK,EAAEK,UAAU,CAACG,GAAG,EAAEb,KAAK,CAAE;MAAA,wBACrE;QAAQ,SAAS,EAAC,SAAS;QAAA,KAAK,EAAEC,OAAQ;QAAC,QAAQ,EAAGI,KAAK,IAAKH,UAAU,CAACG,KAAK,CAACU,MAAM,CAACC,KAAK,CAAE;QAAC,WAAW,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAS,eACnI;QAAQ,SAAS,EAAC,cAAc;QAAC,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB;IAAA;MAAA;MAAA;MAAA;IAAA;EAG7D,GAPQN,UAAU,CAACG,GAAG;IAAA;IAAA;IAAA;EAAA,QAQlB,gBACX;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAkB;AAU1B,CAAC;AAAA,GAvCKf,WAAW;EAAA,QAEKF,SAAS;AAAA;AAAA,KAFzBE,WAAW;AA4CjB,eAAgBA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}