{"ast":null,"code":"var _jsxFileName = \"/home/jaron/ClassProject/Stranger-Things/src/components/PreviewPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { default as Postitem } from \"./Postsitem\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreviewPost = _ref => {\n  _s();\n  let {\n    posts\n  } = _ref;\n  const [message, setMessage] = useState('');\n  const {\n    postID\n  } = useParams();\n  const handleDelete = async (postID, token) => {\n    try {\n      await deleteUserPost(postID, token);\n      const newPost = post.filter(post => post._id !== postID);\n      setPosts(newPost);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const sendMessage = async (event, postID) => {\n    event.preventDefault();\n    setMessage('');\n    const response = await createMessage(message, token, postID);\n    console.log(response);\n  };\n  const singlePost = posts.find(post => post._id == postID);\n  console.log(\"Single Post Here\", singlePost);\n  return singlePost ? /*#__PURE__*/_jsxDEV(Postitem, {\n    post: singlePost,\n    children: singlePost.isAuthor ? null : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => sendMessage(event, singlePost._id),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"message\",\n        value: message,\n        onChange: event => setMessage(event.target.value),\n        placeholder: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"message-send\",\n        type: \"submit\",\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, singlePost._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(PreviewPost, \"sDMjSeoClPYbqBy8RtXfTNQ+bNQ=\", false, function () {\n  return [useParams];\n});\n_c = PreviewPost;\nexport default PreviewPost;\nvar _c;\n$RefreshReg$(_c, \"PreviewPost\");","map":{"version":3,"names":["React","useState","default","Postitem","useParams","PreviewPost","posts","message","setMessage","postID","handleDelete","token","deleteUserPost","newPost","post","filter","_id","setPosts","error","console","sendMessage","event","preventDefault","response","createMessage","log","singlePost","find","isAuthor","target","value"],"sources":["/home/jaron/ClassProject/Stranger-Things/src/components/PreviewPost.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport {default as Postitem} from \"./Postsitem\"\nimport { useParams } from \"react-router-dom\";\n\nconst PreviewPost = ({posts}) => {\n    const [message, setMessage] = useState('')\n    const  {postID} = useParams()\n   \n   \n    const handleDelete = async (postID, token) => {\n        try {\n             await deleteUserPost(postID, token)\n             const newPost = post.filter(post => post._id !== postID)\n             setPosts(newPost)\n            }catch(error) {\n            console.error(error)\n        }\n    }\n    \n    const sendMessage = async(event, postID) => {\n        event.preventDefault()\n        setMessage('')\n        const response = await createMessage(message, token, postID)\n        console.log( response)\n    }\n   \n    \n    const singlePost = posts.find(post => post._id == postID )\n\n    console.log(\"Single Post Here\", singlePost)\n    \nreturn (\n\n        singlePost ? \n        \n        <Postitem key={singlePost._id} post={singlePost} >\n\n        \n        {singlePost.isAuthor ? null : \n        <form onSubmit={(event) => sendMessage(event, singlePost._id)}>\n        <input  className=\"message\"value={message} onChange={(event) => setMessage(event.target.value)} placeholder=\"Send Message\"></input>\n        <button className=\"message-send\" type=\"submit\">Send Message</button>\n        </form>}\n\n           \n        \n        </Postitem> :\n        <div>Loading</div>\n\n\n    \n    \n    \n    \n)\n\n}\n\n\n\n\nexport default  PreviewPost \n\n\n\n "],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,OAAO,IAAIC,QAAQ,QAAO,aAAa;AAC/C,SAASC,SAAS,QAAQ,kBAAkB;AAAC;AAE7C,MAAMC,WAAW,GAAG,QAAa;EAAA;EAAA,IAAZ;IAACC;EAAK,CAAC;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAO;IAACQ;EAAM,CAAC,GAAGL,SAAS,EAAE;EAG7B,MAAMM,YAAY,GAAG,OAAOD,MAAM,EAAEE,KAAK,KAAK;IAC1C,IAAI;MACC,MAAMC,cAAc,CAACH,MAAM,EAAEE,KAAK,CAAC;MACnC,MAAME,OAAO,GAAGC,IAAI,CAACC,MAAM,CAACD,IAAI,IAAIA,IAAI,CAACE,GAAG,KAAKP,MAAM,CAAC;MACxDQ,QAAQ,CAACJ,OAAO,CAAC;IAClB,CAAC,QAAMK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,MAAME,WAAW,GAAG,OAAMC,KAAK,EAAEZ,MAAM,KAAK;IACxCY,KAAK,CAACC,cAAc,EAAE;IACtBd,UAAU,CAAC,EAAE,CAAC;IACd,MAAMe,QAAQ,GAAG,MAAMC,aAAa,CAACjB,OAAO,EAAEI,KAAK,EAAEF,MAAM,CAAC;IAC5DU,OAAO,CAACM,GAAG,CAAEF,QAAQ,CAAC;EAC1B,CAAC;EAGD,MAAMG,UAAU,GAAGpB,KAAK,CAACqB,IAAI,CAACb,IAAI,IAAIA,IAAI,CAACE,GAAG,IAAIP,MAAM,CAAE;EAE1DU,OAAO,CAACM,GAAG,CAAC,kBAAkB,EAAEC,UAAU,CAAC;EAE/C,OAEQA,UAAU,gBAEV,QAAC,QAAQ;IAAsB,IAAI,EAAEA,UAAW;IAAA,UAG/CA,UAAU,CAACE,QAAQ,GAAG,IAAI,gBAC3B;MAAM,QAAQ,EAAGP,KAAK,IAAKD,WAAW,CAACC,KAAK,EAAEK,UAAU,CAACV,GAAG,CAAE;MAAA,wBAC9D;QAAQ,SAAS,EAAC,SAAS;QAAA,KAAK,EAAET,OAAQ;QAAC,QAAQ,EAAGc,KAAK,IAAKb,UAAU,CAACa,KAAK,CAACQ,MAAM,CAACC,KAAK,CAAE;QAAC,WAAW,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAS,eACnI;QAAQ,SAAS,EAAC,cAAc;QAAC,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB;IAAA;MAAA;MAAA;MAAA;IAAA;EAC7D,GAPQJ,UAAU,CAACV,GAAG;IAAA;IAAA;IAAA;EAAA,QAWlB,gBACX;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAkB;AAS1B,CAAC;AAAA,GApDKX,WAAW;EAAA,QAEKD,SAAS;AAAA;AAAA,KAFzBC,WAAW;AAyDjB,eAAgBA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module"}